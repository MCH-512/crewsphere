rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Users can read/update their own user document
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      // Admins can manage all user documents
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow authenticated users to read public/shared data
    match /documents/{docId} { allow read: if request.auth != null; }
    match /courses/{courseId} { allow read: if request.auth != null; }
    match /quizzes/{quizId} { allow read: if request.auth != null; }
    match /questions/{questionId} { allow read: if request.auth != null; }
    match /flights/{flightId} { allow read: if request.auth != null; }
    match /trainingSessions/{sessionId} { allow read: if request.auth != null; }
    match /systemConfiguration/{configId} { allow read: if request.auth != null; }
    match /certificateRules/{ruleId} { allow read: if request.auth != null; }

    // Admins can manage core data
    match /documents/{docId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /courses/{courseId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /quizzes/{quizId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /questions/{questionId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /flights/{flightId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /trainingSessions/{sessionId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /systemConfiguration/{configId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    match /certificateRules/{ruleId} { allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; }
    
    // Alerts
    match /alerts/{alertId} {
        allow read: if request.auth != null;
        allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Alert Acknowledgements
    match /alertAcknowledgements/{ackId} {
        allow read, create: if request.auth.uid == request.resource.data.userId;
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Requests
    match /requests/{requestId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if request.auth.uid == resource.data.userId || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Purser Reports
    match /purserReports/{reportId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if request.auth.uid == resource.data.userId;
        allow read, delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Community Posts and Comments
    match /communityPosts/{postId} {
        allow read, create: if request.auth != null;
        allow update(writeFields: ['likes', 'likeCount']), delete: if request.auth.uid == resource.data.userId;
    }
    match /communityPosts/{postId}/comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Suggestions
    match /suggestions/{suggestionId} {
      allow read, create: if request.auth != null;
      allow update(writeFields: ['upvotes', 'upvoteCount']): if request.auth != null; // User upvoting
      allow update(writeFields: ['status', 'adminNotes']): if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'; // Admin managing
    }
    
    // User Activities: A user can manage their own activities.
    match /userActivities/{activityId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update, delete: if request.auth.uid == resource.data.userId;
    }
    
    // Audit Logs: Admin can read, any authenticated process can write (e.g. cloud functions, server actions)
    match /auditLogs/{logId} {
        allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        allow create: if request.auth != null;
    }
    
  }
}
