
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Helper function to check if the user is an administrator
    function isAdmin() {
      // Check if the user document exists and if their role is 'admin'
      return isSignedIn() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Users Collection ---
    // Admins can read/write any user profile.
    // Users can read any profile (for display names, etc.) but can only update their own.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isOwner(userId); // Allows user creation on first sign-up
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // --- System & Admin Collections ---
    // Most admin-managed collections are admin-only, except for read access where needed.
    match /systemConfiguration/{docId} {
      allow read, write: if isAdmin();
    }
    match /auditLogs/{logId} {
      allow read, write: if isAdmin();
    }
    match /alerts/{alertId} {
        allow read: if isSignedIn(); // All users can read alerts to see them
        allow create, update, delete: if isAdmin();
    }
    
    // --- User-Generated Content ---
    match /requests/{requestId} {
      allow read, update: if isOwner(get(/databases/$(database)/documents/requests/$(requestId)).data.userId) || isAdmin();
      allow create: if isSignedIn();
      allow delete: if isAdmin();
    }
    match /suggestions/{suggestionId} {
       allow read: if isSignedIn(); // All users can see suggestions to upvote them
       allow create: if isSignedIn();
       allow update: if isOwner(get(/databases/$(database)/documents/suggestions/$(suggestionId)).data.userId) || isAdmin();
       allow delete: if isAdmin();
    }
    match /purserReports/{reportId} {
        allow read: if isOwner(get(/databases/$(database)/documents/purserReports/$(reportId)).data.userId) || isAdmin();
        allow create: if isSignedIn(); // Further checks in app logic
        allow update, delete: if isAdmin();
    }
    match /communityPosts/{postId} {
      allow read, create: if isSignedIn();
      allow update, delete: if isOwner(get(/databases/$(database)/documents/communityPosts/$(postId)).data.userId) || isAdmin();
    }
     match /userDocuments/{docId} {
      allow read, create, update, delete: if isOwner(get(/databases/$(database)/documents/userDocuments/$(docId)).data.userId) || isAdmin();
    }

    // --- Core Operational Data ---
    // Everyone can see flights and training schedules for the global timeline and their own schedule.
    // Only admins can create, update, or delete them.
    match /flights/{flightId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    match /trainingSessions/{sessionId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    // Users need to read their own activities. Admins can manage all activities.
    match /userActivities/{activityId} {
       allow read, create, update, delete: if isOwner(get(/databases/$(database)/documents/userActivities/$(activityId)).data.userId) || isAdmin();
    }
    match /flightSwaps/{swapId} {
      allow read, create: if isSignedIn();
      // Only the initiator or an admin can update (e.g., to cancel or for admin to resolve)
      allow update: if isOwner(get(/databases/$(database)/documents/flightSwaps/$(swapId)).data.initiatingUserId) || isAdmin();
      allow delete: if isAdmin();
    }

    // --- Training & Content Library ---
    // Any signed-in user can read published courses and documents. Admins manage them.
    match /documents/{docId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }
    match /courses/{courseId} {
      allow read: if isSignedIn() && resource.data.published == true || isAdmin();
      allow create, update, delete: if isAdmin();
    }
    // Related training content follows admin-only write rules.
    match /quizzes/{quizId} {
        allow read, write: if isAdmin();
    }
     match /questions/{questionId} {
        allow read, write: if isAdmin();
    }
     match /certificateRules/{ruleId} {
        allow read, write: if isAdmin();
    }
    // Users can read and create their own quiz attempts.
    match /userQuizAttempts/{attemptId} {
        allow read, create: if isOwner(get(/databases/$(database)/documents/userQuizAttempts/$(attemptId)).data.userId) || isAdmin();
        allow update, delete: if isAdmin();
    }
  }
}
