
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      // Get the user's document from the 'users' collection
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid));
      // Check if the user document exists and if the role is 'admin'
      return isAuthenticated() && userDoc.data.role == 'admin';
    }

    // Default deny all access to all documents
    match /{document=**} {
      allow read, write: if false;
    }

    // Users collection:
    // Users can read their own profile.
    // Admins can read/write any user profile.
    // New users can create their own profile document.
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow write: if isAdmin();
      allow create: if isOwner(userId);
    }
    
    // Public collections readable by any authenticated user
    match /courses/{courseId} {
      allow read: if isAuthenticated();
    }
    match /documents/{docId} {
      allow read: if isAuthenticated();
      // Only admins can create/update/delete documents
      allow write: if isAdmin();
    }
    
    // User-specific collections
    // Users can manage their own documents, requests, progress, etc.
    match /userDocuments/{docId} {
      allow read, write: if isOwner(request.resource.data.userId) || isAdmin();
    }
     match /userQuizAttempts/{attemptId} {
      allow read, write: if isOwner(request.resource.data.userId) || isAdmin();
    }
     match /userActivities/{activityId} {
      allow read, write: if isOwner(request.resource.data.userId) || isAdmin();
    }
     match /requests/{requestId} {
      allow read, write: if isOwner(request.resource.data.userId) || isAdmin();
    }
    match /suggestions/{suggestionId} {
      allow read: if isAuthenticated();
      allow create: if isOwner(request.resource.data.userId);
      // Users can update (upvote), admins can update status
      allow update: if isAuthenticated();
    }

    // Admin-only collections
    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Logs should be immutable from client
    }
    match /alerts/{alertId} {
      allow read: if isAuthenticated(); // All authenticated users can read alerts
      allow write: if isAdmin();
    }
     match /flights/{flightId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    match /flightSwaps/{swapId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated(); // Users need to be able to create/update swap requests
    }
     match /purserReports/{reportId} {
       allow read, write: if isOwner(request.resource.data.userId) || isAdmin();
    }
     match /trainingSessions/{sessionId} {
        allow read: if isAuthenticated();
        allow write: if isAdmin();
     }
  }
}
