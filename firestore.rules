
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return request.auth != null && request.auth.token.role == 'admin';
    }

    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function isSignedIn() {
      return request.auth != null;
    }

    // --- Collections ---

    match /users/{userId} {
      // Admins and the user themselves can read/write all their data.
      // Any signed-in user can read another user's profile (for crew lists, etc.)
      allow read: if isSignedIn();
      allow write: if isUser(userId) || isAdmin();
      
      // Admins can list all users for management purposes.
      allow list: if isAdmin();
    }

    match /systemConfiguration/{docId} {
      allow read, write: if isAdmin();
    }

    match /alerts/{alertId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      allow list: if isAdmin();
    }
    
    match /documents/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
      allow list: if isAdmin();
    }

    match /userDocuments/{docId} {
      // A user can manage their own documents. Admins can manage any.
      match /userDocuments/{docId} {
        allow read, write: if isUser(resource.data.userId) || isAdmin();
      }
      allow create: if isSignedIn();
      allow list: if isAdmin();
    }

    match /requests/{requestId} {
      allow create: if isSignedIn();
      allow read, update: if isUser(resource.data.userId) || isAdmin();
      allow list: if isAdmin();
    }
    
    match /purserReports/{reportId} {
       allow create: if isSignedIn();
       allow read, update: if isUser(resource.data.userId) || isAdmin();
       allow list: if isAdmin();
    }

    match /flights/{flightId} {
      allow read: if isSignedIn();
      allow write, list: if isAdmin();
    }

    match /flightSwaps/{swapId} {
        allow create: if isSignedIn();
        allow read: if isSignedIn();
        allow update: if isSignedIn(); // Users need to update to request, admins need to update to approve/reject
        allow list: if isAdmin();
    }
    
    match /userActivities/{activityId} {
        allow read, write: if isUser(resource.data.userId) || isAdmin();
        allow create: if isSignedIn();
    }

    match /suggestions/{suggestionId} {
      allow create, read: if isSignedIn();
      allow update: if isSignedIn(); // for upvoting
      allow list: if isAdmin();
    }

    match /communityPosts/{postId} {
      allow create, read: if isSignedIn();
      // Only the author or an admin can delete. Any user can update for likes.
      allow delete: if isUser(resource.data.authorId) || isAdmin();
      allow update: if isSignedIn();
    }
    
    // --- Training & Courses ---

    match /courses/{courseId} {
      allow read: if isSignedIn();
      allow write, list: if isAdmin();
    }
    
    match /quizzes/{quizId} {
        allow read: if isSignedIn();
        allow write, list: if isAdmin();
    }

    match /questions/{questionId} {
       allow read: if isSignedIn();
       allow write, list: if isAdmin();
    }

    match /certificateRules/{ruleId} {
       allow read: if isSignedIn();
       allow write, list: if isAdmin();
    }

    match /userQuizAttempts/{attemptId} {
        allow create: if isSignedIn();
        allow read: if isUser(resource.data.userId) || isAdmin();
        allow list: if isAdmin();
    }
    
    match /trainingSessions/{sessionId} {
        allow read: if isSignedIn();
        allow write, list: if isAdmin();
    }

    // --- Admin Only ---

    match /auditLogs/{logId} {
      allow read, list: if isAdmin();
    }
  }
}
