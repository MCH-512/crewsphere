
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      return isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- User Profiles ---
    match /users/{userId} {
      allow read: if isUserAuthenticated(); // Any logged-in user can read basic profile info for crew lists, etc.
      allow create: if isUserAuthenticated(); // Allows user creation on first login.
      allow update: if isAdmin() || isOwner(userId); // Users can update their own profile, admins can update any.
      allow delete: if isAdmin();
    }
    
    // --- System & Admin ---
    match /systemConfiguration/{docId} {
      allow read: if isUserAuthenticated();
      allow write: if isAdmin();
    }

    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow create: if isUserAuthenticated(); // Any authenticated action can create a log
      allow write: if false; // Logs are immutable
    }

    match /alerts/{alertId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    // --- Core Features ---
    match /flights/{flightId} {
        allow read: if isUserAuthenticated();
        allow create, update, delete: if isAdmin();
    }
    
    match /userActivities/{activityId} {
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow create, update, delete: if isAdmin() || isOwner(resource.data.userId);
    }
    
    match /purserReports/{reportId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isUserAuthenticated();
        allow update: if isAdmin() || isOwner(resource.data.userId); // Allow user to update if needed, but primarily admin
        allow delete: if isAdmin();
    }
    
    match /requests/{requestId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isUserAuthenticated();
        allow update, delete: if isAdmin() || isOwner(resource.data.userId);
    }

    match /suggestions/{suggestionId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated();
        allow update: if isAdmin() || isOwner(resource.data.userId); // Allow creator to update (e.g., withdraw), and admin to manage
        allow delete: if isAdmin();
    }
    
    match /communityPosts/{postId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated();
        allow update: if isOwner(resource.data.authorId); // Only author can edit/update
        allow delete: if isAdmin() || isOwner(resource.data.authorId);
    }

    // --- Document Library ---
    match /documents/{documentId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isAdmin();
    }

    match /userDocuments/{userDocId} {
      allow read: if isAdmin() || isOwner(resource.data.userId);
      allow create, update, delete: if isAdmin() || isOwner(resource.data.userId);
    }

    // --- Training & Quizzes ---
    match /courses/{courseId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    match /quizzes/{quizId} {
       allow read: if isUserAuthenticated();
       allow create, update, delete: if isAdmin();
    }
    
    match /questions/{questionId} {
        allow read: if isUserAuthenticated();
        allow create, update, delete: if isAdmin();
    }

    match /certificateRules/{ruleId} {
        allow read: if isUserAuthenticated();
        allow create, update, delete: if isAdmin();
    }

    match /userQuizAttempts/{attemptId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isUserAuthenticated();
        allow update, delete: if isAdmin(); // Only admins can alter attempts
    }
    
    match /trainingSessions/{sessionId} {
      allow read: if isUserAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // --- Flight Swaps ---
    match /flightSwaps/{swapId} {
        allow read: if isUserAuthenticated();
        allow create: if isUserAuthenticated();
        allow update: if isUserAuthenticated(); // Any user can update to request, or admin to resolve
        allow delete: if isAdmin() || isOwner(resource.data.initiatingUserId);
    }
  }
}
