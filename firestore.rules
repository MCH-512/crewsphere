
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of a document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // --- User Profiles ---
    match /users/{userId} {
      // Admins can read/write any profile. Users can only read/write their own.
      allow read, update: if isAdmin() || isOwner(userId);
      // Allow user creation during signup
      allow create: if isSignedIn();
    }

    // --- Admin-Only Collections ---
    match /auditLogs/{logId} {
      allow read, write: if isAdmin();
    }
    match /systemConfiguration/{configId} {
      allow read, write: if isAdmin();
    }
    
    // --- Public Read, Restricted Write Collections ---
    match /documents/{docId} {
      // Any signed-in user can read library documents
      allow read: if isSignedIn();
      // Only admins can create, update, or delete library documents
      allow write: if isAdmin();
    }
    match /courses/{courseId} {
      // Any signed-in user can read published courses
      allow read: if isSignedIn() && resource.data.published == true;
      // Only admins can write to courses
      allow write: if isAdmin();
    }
    match /quizzes/{quizId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
     match /questions/{questionId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
     match /certificateRules/{ruleId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }
    match /flights/{flightId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
     match /trainingSessions/{sessionId} {
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }

    // --- User-Specific Write, Public/Admin Read ---
    match /requests/{reqId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isSignedIn();
        allow update: if isAdmin();
    }
    match /suggestions/{sugId} {
        allow read: if isSignedIn(); // All can read suggestions
        allow create: if isSignedIn();
        // Only admins can update status/notes. Users can update upvotes.
        allow update: if isAdmin() || (isSignedIn() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['upvotes', 'upvoteCount']));
    }
    match /userQuizAttempts/{attemptId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
     match /userDocuments/{docId} {
        allow read, write: if isAdmin() || isOwner(resource.data.userId);
        allow create: if isSignedIn() && isOwner(request.resource.data.userId);
    }
     match /userActivities/{activityId} {
        allow read: if isAdmin() || isOwner(resource.data.userId);
        allow create, delete: if isAdmin();
        allow update: if isAdmin() || (isOwner(resource.data.userId) && request.resource.data.flightId != resource.data.flightId);
    }
    match /communityPosts/{postId} {
        allow read, create: if isSignedIn();
        allow update: if isOwner(resource.data.authorId) || (isSignedIn() && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'likeCount']));
    }
     match /flightSwaps/{swapId} {
        allow read, create: if isSignedIn();
        allow update: if isSignedIn();
    }

    // --- Alerts: Admin write, targeted read ---
    match /alerts/{alertId} {
      allow read: if isSignedIn() && (resource.data.targetAudience == 'all' || resource.data.targetAudience == get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role);
      allow write: if isAdmin();
    }

    // --- Default deny all other access ---
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
