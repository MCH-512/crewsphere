rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- USER MANAGEMENT ---
    // Allow admins to manage users.
    // Allow any authenticated user to READ user data (necessary for timeline, etc.).
    // Allow users to create their own user document on sign-up.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
      allow create: if request.auth.uid == userId;
    }

    // --- AUDIT LOGS ---
    // Only admins can read audit logs.
    // The system (via server-side logic) creates logs.
    match /auditLogs/{logId} {
      allow read: if isAdmin();
      allow write: if false; // Only backend can write
    }

    // --- ALERTS ---
    // Admins manage alerts. Users can read them based on their role.
    match /alerts/{alertId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // --- USER ACTIVITIES (SCHEDULE) ---
    // Admins can manage all activities.
    // Users can only read their own activities.
    match /userActivities/{activityId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow write: if isAdmin();
    }

    // --- USER REQUESTS ---
    // Admins can read all requests.
    // Users can create requests and read their own.
    match /requests/{requestId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin();
      allow delete: if false; // Soft delete by changing status instead
    }

    // --- SUGGESTION BOX ---
    // All authenticated users can read and create suggestions.
    // Admins can update status/notes.
    match /suggestions/{suggestionId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin() || request.auth.uid == resource.data.userId; // Allow users to upvote
    }

    // --- PURSER REPORTS ---
    // Admins can read all reports.
    // Pursers can create reports and read their own.
    match /purserReports/{reportId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin(); // Only admins can update status/notes
    }

    // --- FLIGHTS & TRAINING (GLOBAL TIMELINE) ---
    // Allow any authenticated user to READ flights and sessions for global timeline.
    // Admins can manage them.
    match /flights/{flightId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /trainingSessions/{sessionId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
     // --- FLIGHT SWAPS ---
    match /flightSwaps/{swapId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if isAdmin() || request.auth.uid == resource.data.initiatingUserId || request.auth.uid == request.resource.data.requestingUserId;
    }
    
    // --- DOCUMENT LIBRARY (PUBLIC) ---
    // All authenticated users can read documents. Admins manage them.
    match /documents/{documentId} {
      allow read: if request.auth != null;
      allow create, update, delete: if isAdmin();
    }

    // --- USER DOCUMENTS (PRIVATE) ---
    // Admins can read all user documents.
    // Users can manage their own documents.
    match /userDocuments/{userDocId} {
        allow read: if isAdmin() || request.auth.uid == resource.data.userId;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update, delete: if isAdmin() || request.auth.uid == resource.data.userId;
    }
    
    // --- E-LEARNING (COURSES, QUIZZES, QUESTIONS, CERTIFICATES) ---
    // Admins have full access.
    // Authenticated users can read published courses, quizzes, and questions.
    match /courses/{courseId} {
        allow read: if request.resource.data.published == true || isAdmin();
        allow write: if isAdmin();
    }
     match /quizzes/{quizId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
     match /questions/{questionId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
     match /certificateRules/{ruleId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // --- USER PROGRESS ---
    // Admins can read all attempts.
    // Users can read and create their own attempts.
    match /userQuizAttempts/{attemptId} {
      allow read: if isAdmin() || request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update, delete: if false; // Attempts are immutable
    }

    // --- COMMUNITY HUB ---
    // All authenticated users can read and create posts.
    // Users can only update their own posts (e.g., for likes).
    match /communityPosts/{postId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.authorId;
        allow update: if request.auth != null; // For liking
    }
    
    // --- SYSTEM CONFIG ---
    // Only admins can read and write system settings.
    match /systemConfiguration/{configId} {
      allow read, write: if isAdmin();
    }

  }
}
