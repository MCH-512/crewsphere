
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Users Collection ---
    // Logged-in users can read their own profile.
    // Admins can read and write any user profile.
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Alerts & Acknowledgements ---
    // Alerts are read-only for users.
    // Admins can create, update, delete alerts.
    match /alerts/{alertId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users can create and read their own acknowledgements.
    match /alertAcknowledgements/{ackId} {
      allow read, create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    
    // --- Courses & Training ---
    // Courses are read-only for all logged-in users.
    // Admins can manage all course-related collections.
    match /courses/{courseId} {
      allow read: if request.auth != null && resource.data.published == true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /quizzes/{quizId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /questions/{questionId} {
       allow read: if request.auth != null;
       allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /certificateRules/{ruleId} {
       allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- User-Specific Data (Progress, Activities, Requests) ---
    // Users can create, read, and update their own progress and activities.
    match /userTrainingProgress/{progressId} {
      allow read, create, update: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
    match /userActivities/{activityId} {
      allow read, create, update, delete: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }

    // Users can create and read their own requests.
    // Admins can read and update any request.
    match /requests/{requestId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && 
                          (request.resource.data.userId == request.auth.uid || 
                           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }

    // --- Documents ---
    // Documents are read-only for authenticated users.
    // Admins can manage documents.
    match /documents/{documentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- Flights & Purser Reports ---
    // Flights are read-only for authenticated users. Admins can manage them.
    match /flights/{flightId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can create and read their own reports.
    // Admins can read, update, and delete any report.
    match /purserReports/{reportId} {
      allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
      allow read, update: if request.auth != null && (request.resource.data.userId == request.auth.uid || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin');
      allow delete: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- Suggestions ---
    // Any authenticated user can create suggestions.
    // Any authenticated user can read suggestions.
    // Admins can update suggestions (status, notes).
    match /suggestions/{suggestionId} {
        allow read, create: if request.auth != null;
        allow update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- Community Posts & Comments ---
    match /communityPosts/{postId} {
        allow read, create, delete: if request.auth != null; // Simplified: any user can create/delete for now. A better rule would check owner on delete.
        allow update: if request.auth != null; // For likes
    }

    match /communityPosts/{postId}/comments/{commentId} {
        allow read, create, delete: if request.auth != null;
    }
    
    // --- Audit Logs & System Config ---
    // Read-only for admins. No user should be able to create them directly.
    match /auditLogs/{logId} {
        allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
        // Writes are handled by backend/server-side logic (e.g. Cloud Functions, App Hosting backend), not client SDK.
        allow write: if false; 
    }
    match /systemConfiguration/{configId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // --- Training Sessions ---
    match /trainingSessions/{sessionId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
  }
}
