name: Full Test Suite â€” CrewSphere
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-all:
    runs-on: ubuntu-latest
    
    services:
      app:
        image: node:20-alpine
        ports:
          - 3000:3000
        options: --entrypoint /bin/sh
        args: -c "cd /github/workspace && npm ci && npm run build && npm run start"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Unit Tests
        run: npm run test:unit
        env:
            NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
            NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.FIREBASE_AUTH_DOMAIN }}

      - name: Run E2E Tests (Playwright)
        run: npx playwright test
        
      - name: Run Accessibility Tests
        run: npm run test:accessibility
      
      - name: Run AI Validation Tests
        run: npm run test:ai
        env:
            GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
            
      - name: Run Performance Tests (Lighthouse)
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: './.github/lighthouse-ci.config.js'
          uploadArtifacts: true
          temporaryPublicStorage: true
      
      - name: Generate New Tests on Feature Commits
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'feat:')
        run: npm run test:auto-generate
        env:
            GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Commit Generated Tests
        if: github.event_name == 'push' && contains(github.event.head_commit.message, 'feat:')
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add tests/unit/*.test.ts
          # Use 'git commit' with '|| echo' to prevent failure if there are no changes
          git commit -m "ðŸ¤– Auto-generated tests for new feature" || echo "No new tests to commit."
          git push
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
      - name: Upload Test Reports
        if: always() # Always run this step to upload reports even if previous steps fail
        uses: actions/upload-artifact@v4-beta
        with:
          name: test-reports
          path: |
            playwright-report/
            lighthouse-report.html
            *.json
          retention-days: 7

  auto-optimize-and-pr:
    name: ðŸ¤– AI Auto-Optimization
    needs: test-all
    runs-on: ubuntu-latest
    # Only run this job after a successful push to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci
      
      - name: Run Predictive Analysis
        id: analysis
        run: npm run auto-optimize
        env:
            GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
            
      - name: Apply Optimizations to Code
        id: apply
        run: node scripts/apply-optimizations.js
        
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "feat: âœ¨ AI-suggested rule optimizations"
          branch: "feature/ai-optimizations"
          delete-branch: true
          title: "ðŸ¤– AI-Suggested Alert Rule Optimizations"
          body: |
            ## Auto-Optimization Report
            
            This pull request was automatically generated by the CrewSphere AI analysis service.
            
            Based on a 90-day performance review of our alert system, the following optimizations are recommended to improve signal-to-noise ratio and proactive detection.
            
            Please review the changes in `src/lib/alert-rules.ts` and merge if they align with our operational goals.
            
            ---
            *This is an automated PR. No human intervention was required to generate this code.*
          labels: "ai, enhancement, automated"
          reviewers: "project-admin" # Replace with actual GitHub usernames
          assignees: "project-admin"
          
